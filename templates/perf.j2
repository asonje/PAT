#!/bin/bash
#
# Copyright (c) 2014-2015, Intel Corporation
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Intel Corporation nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

OUTDIR=$1
SAMPLING_INTERVAL=$2
CMD=$3

function on_exit() {
	killall -SIGINT -e perf
}
trap 'on_exit; exit' SIGINT SIGKILL SIGTERM

function run()
{
	rm -rf perf_tmp
	mkdir perf_tmp
	rm -rf $OUTDIR/perfout

	while(true)do
		perf record -a -F 1000 -o perf_tmp/$(date +%s) sleep 5 2> /dev/null
		sleep 1
	done
}

function post-process()
{
	if [ ! -d "./perf_tmp" ]; then return; fi
	for i in $(ls -r perf_tmp); do
		rm -f ./perf_tmp/$i # remove last perf output file
		break
	done
	for i in $(ls perf_tmp); do
		(perf report -i perf_tmp/$i 2>/dev/null) 1>&1 | awk -v outfile=$i -v host=$(hostname) '(!/^#/ && !/^$/){if($1 >= 0.01)print host,outfile,$0 }' | sed -e 's/\s\+//7g' -e 's/%//g' >> $OUTDIR/perfout
	done
	rm -rf perf_tmp
	rm -rf /tmp/perf-*.map
}

case $CMD in
	"run") run ;;
	"post-process") post-process ;;
esac
